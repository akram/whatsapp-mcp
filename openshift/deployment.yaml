apiVersion: apps/v1
kind: Deployment
metadata:
  name: whatsapp-mcp
  labels:
    app: whatsapp-mcp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: whatsapp-mcp
  template:
    metadata:
      labels:
        app: whatsapp-mcp
    spec:
      serviceAccountName: whatsapp-mcp
      containers:
      # WhatsApp Bridge Container (Go application)
      - name: whatsapp-bridge
        image: image-registry.openshift-image-registry.svc:5000/whatsapp-mcp/whatsapp-bridge:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: BRIDGE_PORT
          value: "8080"
        - name: STORE_PATH
          value: "/app/store"
        volumeMounts:
        - name: whatsapp-data
          mountPath: /app/store
        - name: config
          mountPath: /app/config
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: false
      
      # MCP Server Container (Python application)
      - name: whatsapp-mcp-server
        image: image-registry.openshift-image-registry.svc:5000/whatsapp-mcp/whatsapp-mcp-server:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: mcp
          protocol: TCP
        - containerPort: 3001
          name: http
          protocol: TCP
        env:
        - name: BRIDGE_URL
          value: "http://localhost:8080"
        - name: MCP_PORT
          value: "3000"
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: ENABLE_HTTP_SERVER
          value: "true"
        - name: HTTP_PORT
          value: "3001"
        volumeMounts:
        - name: whatsapp-data
          mountPath: /app/store
        - name: config
          mountPath: /app/config
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        readinessProbe:
          exec:
            command:
            - python
            - -c
            - "import sys; sys.exit(0)"
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001020000
          runAsGroup: 1001020000
          fsGroup: 1001020000
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: false
      
      volumes:
      - name: whatsapp-data
        persistentVolumeClaim:
          claimName: whatsapp-data-pvc
      - name: config
        configMap:
          name: whatsapp-mcp-config
      
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
